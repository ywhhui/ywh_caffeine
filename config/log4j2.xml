<?xml version="1.0" encoding="UTF-8"?>
<!-- 主要配置为error日志与debug日志分别打印文件，errorLog按照分钟存档，debugLog按照日志文件大小存档，最多保存10个。 -->
<!-- 日志打印状态为debug， monitorInterval是用来设置配置文件的动态加载时间的，每30秒配置文件会动态加载一次，修改配置30秒会生效-->
<configuration status="debug" monitorInterval="30">
    <Properties>
        <!-- LOG_HOME变量名，日志存储路径。logPattern日志打印路径 -->
        <property name="LOG_HOME">/ziyan/log/ywh_caffeine</property>
        <!-- 格式化输出：%d格式化日期，%-5level：级别从左显示5个字符宽度，%thread表示线程名，%msg：日志消息，%n是换行符 -->
        <property name="logPattern" value ="%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%logger{0}:%line][%thread] %X{logger_id} - [TID: %X{EagleEye-TraceID}] - [RequestId: %X{requestId}] %msg%n"/>
    </Properties>

    <Appenders>
        <!--Appender 1. console输出DEBUG级别以上日志，指定输出格式和过滤器等级为DEBUG -->
        <Console name="console" target="SYSTEM_OUT">
            <PatternLayout pattern="${logPattern}"/>
            <ThresholdFilter level="DEBUG" onMatch="ACCEPT" onMismatch="DENY"/>
        </Console>

        <!--Appender 2. INFO日志保存到app.log文件,日志留3天 -->
        <RollingFile name="info" fileName="${LOG_HOME}/demo.log"
                     filePattern="${LOG_HOME}/demo.log.%d{yyyy-MM-dd}">
            <PatternLayout pattern="${logPattern}"/>
            <ThresholdFilter level="INFO" onMatch="ACCEPT" onMismatch="DENY"/>
            <CronTriggeringPolicy schedule="0 0 0 * * ?"/>
            <DefaultRolloverStrategy>
                <Delete basePath="${LOG_HOME}" maxDepth="2">
                    <IfFileName glob="demo.log.20*" />
                    <IfLastModified age="3d" />
                </Delete>
            </DefaultRolloverStrategy>
        </RollingFile>

        <!--Appender 3. DEBUG日志保存到debug.log文件,日志留3天 -->
        <RollingFile name="debug" fileName="${LOG_HOME}/debug.log"
                     filePattern="${LOG_HOME}/debug.log.%d{yyyy-MM-dd}">
            <PatternLayout pattern="${logPattern}"/>
            <ThresholdFilter level="DEBUG" onMatch="ACCEPT" onMismatch="DENY"/>
            <CronTriggeringPolicy schedule="0 0 0 * * ?"/>
            <DefaultRolloverStrategy>
                <Delete basePath="${LOG_HOME}" maxDepth="2">
                    <IfFileName glob="debug.log.20*" />
                    <IfLastModified age="3d" />
                </Delete>
            </DefaultRolloverStrategy>
        </RollingFile>

        <!--Appender 4. ERROR日志保存到error.log文件,日志留3天 -->
        <RollingFile name="error" fileName="${LOG_HOME}/error.log"
                     filePattern="${LOG_HOME}/error.log.%d{yyyy-MM-dd}">
            <PatternLayout pattern="${logPattern}"/>
            <ThresholdFilter level="ERROR" onMatch="ACCEPT" onMismatch="DENY"/>
            <CronTriggeringPolicy schedule="0 0 0 * * ?"/>
            <DefaultRolloverStrategy>
                <Delete basePath="${LOG_HOME}" maxDepth="2">
                    <IfFileName glob="error.log.20*" />
                    <IfLastModified age="3d" />
                </Delete>
            </DefaultRolloverStrategy>
        </RollingFile>
    </Appenders>

    <Loggers>
        <AsyncRoot level="info" includeLocation="true">
            <AppenderRef ref="console"/>
            <AppenderRef ref="info"/>
            <AppenderRef ref="debug"/>
            <AppenderRef ref="error"/>
        </AsyncRoot>
    </Loggers>
    <!--<Loggers>
        &lt;!&ndash; 自定义异步logger对象, name必须是LoggerFactory.getLogger(Log4j2Test.class)对应 &ndash;&gt;
        &lt;!&ndash; 如果设置includeLocation=true, 开启日志记录行号信息会急剧降低异步日志的性能，比同步日志还要慢 &ndash;&gt;
        &lt;!&ndash; 这里设置includeLocation=false，则PatternLayout的%l将不会打印出来 &ndash;&gt;
        &lt;!&ndash; additivity="false": 不再继承RootLogger对象. 这里建议强制设置成false &ndash;&gt;
        <AsyncLogger level="info" includeLocation="false" additivity="false"  name="org.apache">
            <AppenderRef ref="Console"/>
            <AppenderRef ref="RollingFileInfo"/>
        </AsyncLogger>

        <AsyncLogger level="info" includeLocation="false" additivity="false"  name="org">
            <AppenderRef ref="Console"/>
            <AppenderRef ref="RollingFileInfo"/>
        </AsyncLogger>

        <AsyncLogger level="warn" includeLocation="false" additivity="false"  name="org.apache.org.apache.ibatis.logging.stdout.StdOutImpl">
            <AppenderRef ref="Console"/>
            <AppenderRef ref="RollingFileInfo"/>
        </AsyncLogger>

        &lt;!&ndash; RootLogger是同步的。除Log4j2Test外，其它名称的logger使用RootLogger进行输出 &ndash;&gt;
        <Root level="INFO">
            <AppenderRef ref="Console" />
            <AppenderRef ref="Async" />
        </Root>
    </Loggers>-->

</configuration>